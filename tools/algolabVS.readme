# Algolab VS

## 1 Setup (Only do this once.)

### 1.1 Install C++ Extension For VS Code
1. Download the file `ms-vscode.cpptools-0.21.0.vsix` from the `algolab/tools/` directory on the judge.
2. cd to the directory where you saved `ms-vscode.cpptools-0.21.0.vsix`.
3. Run `code --install-extension ms-vscode.cpptools-0.21.0.vsix`

You should now be able to use c++ intellisense, goto definition etc. 

REMARK: Be aware that it takes a while for parsing all the c++ libraries, so autocomplete won't be available immediately.
On the ETH lab computers it takes up 8-10 minutes, so be patient (you can keep coding meanwhile).
 Also, check in the bottom right corner, when hovering over the little DB icon, whether it states 'Parsing Paused'. If yes, click the symbol and resume parsing.

### 1.2 Install algolabVS command
1. Download the file `algolabVS.sh` and place it wherever you want.
2. Cd to the directory where you placed `algolabVS.sh`.
3. Run `chmod +x ./algolabVS.sh` to make the script executable.
4. Run `./algolabVS.sh install`

You can now use the algolabVS command in all directories.

## 2 Initialize a new project (Do this once for every task.)

1. cd to the folder where you want to init your project.
2. Run `algolabVS init`
3. Run `code .` to open VS code in the current directory.


Now VS code will be configured to run/debug/test within VS code. 

### 2.1 How to run tasks
1. Open the VS code command prompt (`Ctrl + shift + P` on windows/linux, probabily `Cmd + shift + P` on OSX?).
2. Type `run task` and look for the command `Tasks: Run Task`.
3. Select the command and see a list of three tasks to run which are explained below:

- Run: Compiles in release mode and runs the program in the inegrated terminal (Runs 'algolab run' under the hood.)
- Debug: Compiles in debug mode but DOES NOT run the program. See section 'How to use the debugger' below. (Runs a slightly modified version of 'algolab debug' under the hood.)
- Test: Compiles in release mode, runs the program with all testcases and prints the diff to the integrated terminal. (Runs 'algolab test' under the hood.)

### 2.2 How to use the debugger
To use the debugger, do not run the debug task above directly. Simply go to the debug section of VS code and press the play button in the top left corner. This will run the above debug task under the hood. Alternatively one can also press `F5` which is the default keybinding in VS code.
You should now be able to use the GDB debugger within vs code!
As it is annoying to input the data manually while debugging, the input will be redirected from a file called 'debug_test_data.txt' inside the root directory. Simply write down your input there before running the debugger.